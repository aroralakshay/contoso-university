# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger: none
pr: none


pool:
  vmImage: 'windows-latest'

variables:
  solution: 'contoso-university/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Debug'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  disable.coverage.autogenerate: 'true'

steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk'
    inputs:
      packageType: 'sdk'
      useGlobalJson: true

  - task: NuGetToolInstaller@1

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'

  - task: DotNetCoreCLI@2
    inputs :
     command: 'build'
     projects: |
      ContosoUniversity.Api/*.csproj
      ContosoUniversity.Common/*.csproj
      ContosoUniversity.Data/*.csproj
      ContosoUniversity.Spa.React/*.csproj
      ContosoUniversity.Web/*.csproj
       arguments: '--configuration $(BuildConfiguration) -p:DeployOnBuild=true;WebPublishMethod=Package;PackageAsSingleFile=true;SkipInvalidConfigurations=true;DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip"'
      

  - task: DotNetCoreCLI@2
    displayName: dotnet test
    inputs:
      command: test
      projects: |
       ContosoUniversity.Api.Tests/*.csproj
       ContosoUniversity.Data.Tests/*.csproj
       ContosoUniversity.Test/*.csproj
       ContosoUniversity.Web.IntegrationTests/*.csproj
       ContosoUniversity.Web.Tests/*.csproj
      nobuild: true

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'

  - script: 'dotnet tool install --global dotnet-reportgenerator-globaltool --version 4.8.4'  
    displayName: 'Install ReportGenerator tool'

  - script: 'reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:"HtmlInline_AzurePipelines;Cobertura"'  
    displayName: 'Create code coverage reports'

  - task: PublishCodeCoverageResults@1  
    displayName: 'Publish code coverage'  
    inputs:  
      codeCoverageTool: Cobertura  
      summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml' 
      reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'